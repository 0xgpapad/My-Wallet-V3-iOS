attributes:
  ORGANIZATIONNAME: Blockchain Luxembourg S.A
configs:
  Debug Dev: debug
  Debug Production: debug
  Debug Staging: debug
  Release: release
  Release Internal: release
  Release Staging: release
fileGroups:
  - README.md
name: Blockchain
options:
  bundleIdPrefix: com.rainydayapps
  defaultConfig: Release
  deploymentTarget:
    iOS: '13.0'
  groupSortPosition: bottom
  platform: iOS
schemeTemplates:
  BlockchainScheme:
    analyze:
      config: ${debugConfig}
    archive:
      config: ${releaseConfig}
      customArchiveName: Blockchain
    build:
      targets:
        Blockchain: build
    profile:
      config: ${releaseConfig}
    run:
      config: ${debugConfig}
      environmentVariables:
      - variable: bootstrap_work
        value: ${bootstrapWorkValue}
    test:
      config: ${debugConfig}
      gatherCoverageData: true
      targets:
      - name: ToolKitTests
        randomExecutionOrder: true
      - name: NetworkKitTests
        randomExecutionOrder: true
      - name: CommonCryptoKitTests
        randomExecutionOrder: true
      - name: PlatformKitTests
        randomExecutionOrder: true
      - name: PlatformUIKitTests
        randomExecutionOrder: true
      - name: AlgorandKitTests
        randomExecutionOrder: true
      - name: PolkadotKitTests
        randomExecutionOrder: true
      - name: ActivityKitTests
        randomExecutionOrder: true
      - name: BitcoinKitTests
        randomExecutionOrder: true
      - name: DashboardKitTests
        randomExecutionOrder: true
      - name: DashboardUIKitTests
        randomExecutionOrder: true
      - name: ERC20KitTests
        randomExecutionOrder: true
      - name: EthereumKitTests
        randomExecutionOrder: true
      - name: HDWalletKitTests
        randomExecutionOrder: true
      - name: TransactionKitTests
        randomExecutionOrder: true
      - name: TransactionUIKitTests
        randomExecutionOrder: true
      - name: StellarKitTests
        randomExecutionOrder: true
      - name: KYCKitTests
        randomExecutionOrder: true
      - name: SettingsKitTests
        randomExecutionOrder: true
      - name: SettingsUIKitTests
        randomExecutionOrder: true
      - name: AnalyticsKitTests
        randomExecutionOrder: true
      - name: NabuAnalyticsDataKitTests
        randomExecutionOrder: true
      - name: NabuAnalyticsKitTests
        randomExecutionOrder: true
      - name: RemoteNotificationsKitTests
        randomExecutionOrder: true
      - name: KYCUIKitTests
        randomExecutionOrder: true
      - name: AuthenticationKitTests
        randomExecutionOrder: true
      - name: AuthenticationUIKitTests
        randomExecutionOrder: true
      - name: AuthenticationDataKitTests
        randomExecutionOrder: true
      - name: BlockchainTests
        randomExecutionOrder: true
schemes:
  Blockchain:
    templateAttributes:
      debugConfig: Debug Production
      releaseConfig: Release
      bootstrapWorkValue: "false"
    templates:
    - BlockchainScheme
  Blockchain (Dev):
    templateAttributes:
      debugConfig: Debug Dev
      releaseConfig: Release
      bootstrapWorkValue: "false"
    templates:
    - BlockchainScheme
  Blockchain (Internal Production):
    templateAttributes:
      debugConfig: Debug Production
      releaseConfig: Release Internal
      bootstrapWorkValue: "false"
    templates:
    - BlockchainScheme
  Blockchain (Staging):
    templateAttributes:
      debugConfig: Debug Staging
      releaseConfig: Release Staging
      bootstrapWorkValue: "false"
    templates:
    - BlockchainScheme
settingGroups:
  base_ios:
    base:
      TARGETED_DEVICE_FAMILY: 1
  base_signing:
    base:
      CODE_SIGN_ENTITLEMENTS: Blockchain/Blockchain.entitlements
      CODE_SIGN_STYLE: Manual
      DEVELOPMENT_TEAM: NZ6PH75U7K
  base_signing_today_extension:
    base:
      CODE_SIGN_ENTITLEMENTS: TodayExtension/TodayExtension.entitlements
      CODE_SIGN_STYLE: Manual
      DEVELOPMENT_TEAM: NZ6PH75U7K
      PRODUCT_BUNDLE_IDENTIFIER: com.rainydayapps.Blockchain.TodayExtension
  debug_signing:
    base:
      CODE_SIGN_IDENTITY: iPhone Developer
      PROVISIONING_PROFILE_SPECIFIER: match Development com.rainydayapps.Blockchain
    groups:
    - base_signing
  debug_signing_today_extension:
    base:
      CODE_SIGN_IDENTITY: iPhone Developer
      PROVISIONING_PROFILE_SPECIFIER: match Development com.rainydayapps.Blockchain.TodayExtension
    groups:
    - base_signing_today_extension
  release_signing:
    base:
      CODE_SIGN_IDENTITY: iPhone Distribution
      PROVISIONING_PROFILE_SPECIFIER: match AppStore com.rainydayapps.Blockchain
    groups:
    - base_signing
  release_signing_today_extension:
    base:
      CODE_SIGN_IDENTITY: iPhone Distribution
      PROVISIONING_PROFILE_SPECIFIER: match AppStore com.rainydayapps.Blockchain.TodayExtension
    groups:
    - base_signing_today_extension
settings:
  base:
    CODE_SIGN_STYLE: Manual
    ENABLE_BITCODE: false
    SUPPORTS_MACCATALYST: false
    VALID_ARCHS: arm64
    VALID_ARCHS[sdk=iphonesimulator*]: x86_64
  configs:
    Debug Dev:
      OTHER_SWIFT_FLAGS: -DINTERNAL_BUILD
    Debug Production:
      OTHER_SWIFT_FLAGS: -DINTERNAL_BUILD
    Debug Staging:
      OTHER_SWIFT_FLAGS: -DINTERNAL_BUILD
    Release Internal:
      OTHER_SWIFT_FLAGS: -DINTERNAL_BUILD
    Release Staging:
      OTHER_SWIFT_FLAGS: -DINTERNAL_BUILD
targetTemplates:
  Module:
    dependencies:
    - framework: Carthage/Build/DIKit.xcframework
    - framework: Carthage/Build/RxSwift.xcframework
    platform: iOS
    schemes:
      gatherCoverageData: true
    sources:
    - createIntermediateGroups: true
      excludes:
      - Scripts
      path: Modules/${featureName}/${target_name}
    - path: Modules/${featureName}/README.md
    type: framework
  ModuleTests:
    dependencies:
    - framework: Carthage/Build/DIKit.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - framework: Carthage/Build/RxSwift.xcframework
    - framework: Carthage/Build/RxBlocking.xcframework
    - framework: Carthage/Build/RxTest.xcframework
    - target: SharedPackagesKit
    platform: iOS
    sources:
    - createIntermediateGroups: true
      excludes:
      - "**/__Snapshots__"
      path: Modules/${featureName}/${target_name}
    - createIntermediateGroups: true
      path: TestKit/TestKit/Utilities
    type: bundle.unit-test
packages:
  ComposableArchitecture:
    url: https://github.com/pointfreeco/swift-composable-architecture
    version: 0.18.0
  CombineExt:
    url: https://github.com/CombineCommunity/CombineExt.git
    version: 1.3.0
  SnapshotTesting:
    url: https://github.com/pointfreeco/swift-snapshot-testing
    version: 1.9.0
  Veriff:
    url: https://github.com/Veriff/veriff-ios-spm/
    version: 4.8.0
targets:
  ActivityKit:
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - target: AlgorandKit
    - target: BitcoinCashKit
    - target: BitcoinKit
    - target: ERC20Kit
    - target: EthereumKit
    - target: NetworkKit
    - target: PlatformKit
    - target: PolkadotKit
    - target: StellarKit
    - target: ToolKit
    scheme:
      testTargets:
      - ActivityKitTests
    templateAttributes:
      featureName: ActivityFeature
    templates:
    - Module
  ActivityKitTests:
    dependencies:
    - target: ActivityKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: ActivityFeature
    templates:
    - ModuleTests
  ActivityUIKit:
    dependencies:
    - framework: Carthage/Build/RxCocoa.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - framework: Carthage/Build/RxDataSources.xcframework
    - sdk: LinkPresentation.framework
    - sdk: SafariServices.framework
    - target: ActivityKit
    - target: Localization
    - target: PlatformKit
    - target: PlatformUIKit
    - target: ToolKit
    scheme:
      testTargets:
      - ActivityUIKitTests
    templateAttributes:
      featureName: ActivityFeature
    templates:
    - Module
  ActivityUIKitTests:
    dependencies:
    - target: ActivityUIKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformUIKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: ActivityFeature
    templates:
    - ModuleTests
  AlgorandKit:
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - framework: Carthage/Build/DIKit.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - framework: Carthage/Build/RxSwift.xcframework
    - target: Localization
    - target: NetworkKit
    - target: PlatformKit
    - target: ToolKit
    scheme:
      testTargets:
      - AlgorandKitTests
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - Module
  AlgorandKitTests:
    dependencies:
    - target: AlgorandKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - ModuleTests
  AnalyticsKit:
    templateAttributes:
      featureName: Analytics
    templates:
    - Module
  AnalyticsKitTests:
    dependencies:
    - target: AnalyticsKit
    templateAttributes:
      featureName: Analytics
    templates:
    - ModuleTests
  NabuAnalyticsKit:
    dependencies:
    - target: PlatformKit
    - target: NetworkKit
    - target: AnalyticsKit
    - target: SettingsKit
    - target: SharedPackagesKit
    templateAttributes:
      featureName: Analytics
    templates:
    - Module
  NabuAnalyticsKitTests:
    dependencies:
    - target: NabuAnalyticsKit
    templateAttributes:
      featureName: Analytics
    templates:
    - ModuleTests
  NabuAnalyticsDataKit:
    dependencies:
    - target: NabuAnalyticsKit
    - target: NetworkKit
    - target: ToolKit
    scheme:
      testTargets:
      - NabuAnalyticsDataKitTests
    templateAttributes:
      featureName: Analytics
    templates:
    - Module
  NabuAnalyticsDataKitTests:
    dependencies:
    - target: NabuAnalyticsDataKit
    templateAttributes:
      featureName: Analytics
    templates:
    - ModuleTests
  BitcoinCashKit:
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - framework: Carthage/Build/DIKit.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - framework: Carthage/Build/RxSwift.xcframework
    - target: BitcoinChainKit
    - target: Localization
    - target: NetworkKit
    - target: PlatformKit
    - target: ToolKit
    scheme:
      testTargets:
      - BitcoinCashKitTests
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - Module
  BitcoinCashKitTests:
    dependencies:
    - target: BitcoinCashKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - ModuleTests
  BitcoinChainKit:
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - framework: Carthage/Build/RxCocoa.xcframework
    - framework: Carthage/Build/RxCombine.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - framework: Carthage/Build/SwiftProtobuf.xcframework
    - target: Localization
    - target: NetworkKit
    - target: PlatformKit
    - target: ToolKit
    - target: TransactionKit
    scheme:
      testTargets:
      - BitcoinChainKitTests
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - Module
  BitcoinChainKitTests:
    dependencies:
    - target: BitcoinChainKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - ModuleTests
  BitcoinKit:
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - framework: Carthage/Build/RxCocoa.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - framework: Carthage/Build/WalletCore.xcframework
    - target: BitcoinChainKit
    - target: Localization
    - target: NetworkKit
    - target: PlatformKit
    - target: ToolKit
    - target: TransactionKit
    scheme:
      testTargets:
      - BitcoinKitTests
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - Module
  BitcoinKitTests:
    dependencies:
    - target: BitcoinKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/BitcoinKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - ModuleTests
  Blockchain:
    configFiles:
      Debug Dev: Config/BlockchainConfig/Blockchain-Dev.xcconfig
      Debug Production: Config/BlockchainConfig/Blockchain-Production.xcconfig
      Debug Staging: Config/BlockchainConfig/Blockchain-Staging.xcconfig
      Release: Config/BlockchainConfig/Blockchain-Production.xcconfig
      Release Internal: Config/BlockchainConfig/Blockchain-Production.xcconfig
      Release Staging: Config/BlockchainConfig/Blockchain-Staging.xcconfig
    dependencies:
    - sdk: libicucore.tbd
    - package: Veriff
    - framework: Carthage/Build/BigInt.xcframework
    - framework: Carthage/Build/Charts.xcframework
    - framework: Carthage/Build/CryptoSwift.xcframework
    - framework: Carthage/Build/Differentiator.xcframework
    - framework: Carthage/Build/DIKit.xcframework
    - framework: Carthage/Build/Differentiator.xcframework
    - framework: Carthage/Build/PhoneNumberKit.xcframework
    - framework: Carthage/Build/RIBs.xcframework
    - framework: Carthage/Build/RxCocoa.xcframework
    - framework: Carthage/Build/RxCombine.xcframework
    - framework: Carthage/Build/RxDataSources.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - framework: Carthage/Build/RxSwift.xcframework
    - framework: Carthage/Build/Sift.xcframework
    - framework: Carthage/Build/stellarsdk.xcframework
    - framework: Carthage/Build/SwiftProtobuf.xcframework
    - framework: Carthage/Build/WalletCore.xcframework
    - framework: Carthage/Build/Zxcvbn.xcframework
    - embed: false
      framework: Submodules/OpenSSL-for-iPhone/lib/libcrypto.a
    - target: AnalyticsKit
    - target: NabuAnalyticsKit
    - target: NabuAnalyticsDataKit
    - target: PlatformUIKit
    - target: TodayExtension
    - target: PlatformKit
    - target: InterestKit
    - target: InterestUIKit
    - target: TransactionKit
    - target: TransactionUIKit
    - target: WalletPayloadKit
    - target: ToolKit
    - target: NetworkKit
    - target: AlgorandKit
    - target: PolkadotKit
    - target: StellarKit
    - target: EthereumKit
    - target: ERC20Kit
    - target: BitcoinKit
    - target: BitcoinCashKit
    - target: BitcoinChainKit
    - target: HDWalletKit
    - target: CommonCryptoKit
    - target: Localization
    - target: ActivityKit
    - target: ActivityUIKit
    - target: DashboardKit
    - target: DashboardUIKit
    - target: KYCKit
    - target: KYCUIKit
    - target: DebugUIKit
    - target: SettingsUIKit
    - target: SettingsKit
    - target: SharedPackagesKit
    - target: UIComponentsKit
    - target: RemoteNotificationsKit
    - target: AuthenticationKit
    - target: AuthenticationUIKit
    - target: AuthenticationDataKit
    - carthage: FIRAnalyticsConnector
      findFrameworks: false
      linkType: static
    - carthage: FirebaseABTesting
      findFrameworks: false
      linkType: static
    - carthage: FirebaseAnalytics
      findFrameworks: false
      linkType: static
    - carthage: FirebaseCore
      findFrameworks: false
      linkType: static
    - carthage: FirebaseCoreDiagnostics
      findFrameworks: false
      linkType: static
    - carthage: FirebaseCrashlytics
      findFrameworks: false
      linkType: static
    - carthage: FirebaseDynamicLinks
      findFrameworks: false
      linkType: static
    - carthage: FirebaseInstallations
      findFrameworks: false
      linkType: static
    - carthage: FirebaseInstanceID
      findFrameworks: false
      linkType: static
    - carthage: FirebaseMessaging
      findFrameworks: false
      linkType: static
    - carthage: FirebaseRemoteConfig
      findFrameworks: false
      linkType: static
    - carthage: GoogleAppMeasurement
      findFrameworks: false
      linkType: static
    - carthage: GoogleDataTransport
      findFrameworks: false
      linkType: static
    - carthage: GoogleUtilities
      findFrameworks: false
      linkType: static
    - carthage: nanopb
      findFrameworks: false
      linkType: static
    - carthage: PromisesObjC
      findFrameworks: false
      linkType: static
    - carthage: Protobuf
      findFrameworks: false
      linkType: static
    platform: iOS
    postBuildScripts:
    - inputFiles:
      - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${TARGET_NAME}
      name: Run Crashlytics
      script: ${PROJECT_DIR}/scripts/crashlytics/run
    postCompileScripts:
    - name: Swiftlint
      path: Blockchain/Scripts/swiftlint.sh
    - name: Setup Firebase Environment
      path: Blockchain/Scripts/firebase_copy_plist.sh
    - name: Envman BUILT_PRODUCTS_DIR
      path: Blockchain/Scripts/export_built_products_dir.sh
    preBuildScripts:
    - name: my-wallet SHA256
      script: "if [[ -z \"${BITRISE_PROJECT_PATH}\" ]]; then\n  exit 0\nfi\ncd ${PROJECT_DIR}\n\
        if ! shasum -a 256 -c ${PROJECT_DIR}/my-wallet.js.sha256; then\n  echo \"\
        Checksum failed:\" >&2\n  exit 1\nfi\n"
    settings:
      base:
        COMMIT_HASH: ${COMMIT_HASH}
        GCC_PREFIX_HEADER: Blockchain/Blockchain-Prefix.pch
        FRAMEWORK_SEARCH_PATHS:
        - $(PROJECT_DIR)/Carthage/Build/iOS/
        - $(PROJECT_DIR)/Carthage/Build/
        - Submodules/OpenSSL-for-iPhone/lib
        HEADER_SEARCH_PATHS:
        - $(PROJECT_DIR)/Submodules/OpenSSL-for-iPhone/include
        - $(PROJECT_DIR)/Submodules/SocketRocket
        LIBRARY_SEARCH_PATHS:
        - $(PROJECT_DIR)/Submodules/OpenSSL-for-iPhone/lib
        OTHER_LDFLAGS:
        - -ObjC
        SWIFT_OBJC_BRIDGING_HEADER: Blockchain/Blockchain-Bridging-Header.h
      configs:
        Debug Dev:
          groups:
          - debug_signing
          - base_ios
        Debug Production:
          groups:
          - debug_signing
          - base_ios
        Debug Staging:
          groups:
          - debug_signing
          - base_ios
        Release:
          groups:
          - release_signing
          - base_ios
        Release Internal:
          groups:
          - release_signing
          - base_ios
        Release Staging:
          groups:
          - release_signing
          - base_ios
    sources:
    - group: Blockchain/JavaScript
      optional: true
      path: Submodules/My-Wallet-V3/dist/my-wallet.js
    - excludes:
      - Firebase
      - Scripts
      path: Blockchain
    - includes:
      - '**/*.[hm]'
      path: Submodules/SocketRocket/SocketRocket
    - includes:
      - BTCAddress.[hm]
      - BTCBase58.[hm]
      - BTCBigNumber.[hm]
      - BTCCurvePoint.[hm]
      - BTCData.[hm]
      - BTCErrors.[hm]
      - BTCKey.[hm]
      - BTCKeychain.[hm]
      - BTCNetwork.[hm]
      - BTCProtocolSerialization.[hm]
      - NSData+BTCData.[hm]
      path: Submodules/CoreBitcoin/CoreBitcoin
    type: application
  BlockchainTests:
    dependencies:
    - framework: Carthage/Build/RxBlocking.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - framework: Carthage/Build/RxSwift.xcframework
    - framework: Carthage/Build/RxTest.xcframework
    - target: SharedPackagesKit
    - target: Blockchain
    platform: iOS
    sources:
    - path: BlockchainTests
    - createIntermediateGroups: true
      path: TestKit/TestKit/Utilities
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformUIKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/RemoteNotificationsKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/KYCKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/KYCUIKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/AnalyticsKit
    type: bundle.unit-test
  DashboardKit:
    scheme:
      testTargets:
      - DashboardKitTests
    templates:
    - Module
    templateAttributes:
      featureName: DashboardFeature
  DashboardKitTests:
    dependencies:
    - target: DashboardKit
    templates:
    - ModuleTests
    templateAttributes:
      featureName: DashboardFeature
  DashboardUIKit:
    dependencies:
    - framework: Carthage/Build/RxCocoa.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - target: DashboardKit
    - target: PlatformUIKit
    - target: TransactionUIKit
    scheme:
      testTargets:
      - DashboardUIKitTests
    templates:
    - Module
    templateAttributes:
      featureName: DashboardFeature
  DashboardUIKitTests:
    dependencies:
    - target: DashboardUIKit
    templates:
    - ModuleTests
    templateAttributes:
      featureName: DashboardFeature
  SharedPackagesKit:
    dependencies:
    - package: ComposableArchitecture
    - package: CombineExt
    platform: iOS
    deploymentTarget:
        iOS: '13.0'
    scheme: {}
    sources:
    - createIntermediateGroups: true
      excludes:
      - Scripts
      path: Modules/SharedPackages/SharedPackagesKit
    type: framework
  CommonCryptoKit:
    dependencies:
    - framework: Carthage/Build/CryptoSwift.xcframework
    - framework: Carthage/Build/SwiftProtobuf.xcframework
    - framework: Carthage/Build/WalletCore.xcframework
    scheme:
      testTargets:
      - CommonCryptoKitTests
    templateAttributes:
      featureName: CommonCrypto
    templates:
    - Module
  CommonCryptoKitTests:
    dependencies:
    - target: CommonCryptoKit
    templateAttributes:
      featureName: CommonCrypto
    templates:
    - ModuleTests
  DebugUIKit:
    dependencies:
    - target: PlatformKit
    - target: PlatformUIKit
    - target: ToolKit
    templateAttributes:
      featureName: DebugUI
    templates:
    - Module
  ERC20Kit:
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - framework: Carthage/Build/SwiftProtobuf.xcframework
    - framework: Carthage/Build/WalletCore.xcframework
    - target: EthereumKit
    - target: NetworkKit
    - target: PlatformKit
    - target: ToolKit
    - target: TransactionKit
    scheme:
      testTargets:
      - ERC20KitTests
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - Module
  ERC20KitTests:
    dependencies:
    - target: ERC20Kit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/EthereumKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ERC20Kit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - ModuleTests
  EthereumKit:
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - framework: Carthage/Build/SwiftProtobuf.xcframework
    - framework: Carthage/Build/WalletCore.xcframework
    - target: NetworkKit
    - target: PlatformKit
    - target: ToolKit
    - target: TransactionKit
    scheme:
      testTargets:
      - EthereumKitTests
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - Module
  EthereumKitTests:
    dependencies:
    - target: EthereumKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/EthereumKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - ModuleTests
  HDWalletKit:
    dependencies:
    - target: CommonCryptoKit
    - target: ToolKit
    scheme:
      testTargets:
      - HDWalletKitTests
    templateAttributes:
      featureName: HDWallet
    templates:
    - Module
  HDWalletKitTests:
    dependencies:
    - target: HDWalletKit
    templateAttributes:
      featureName: HDWallet
    templates:
    - ModuleTests
  InterestKit:
    dependencies:
    - target: Localization
    - target: NetworkKit
    - target: PlatformKit
    - target: ToolKit
    scheme:
      testTargets:
      - InterestKitTests
    templateAttributes:
      featureName: InterestFeature
    templates:
    - Module
  InterestKitTests:
    dependencies:
    - target: InterestKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: InterestFeature
    templates:
    - ModuleTests
  InterestUIKit:
    dependencies:
    - target: CommonCryptoKit
    - target: InterestKit
    - target: Localization
    - target: NetworkKit
    - target: PlatformKit
    - target: PlatformUIKit
    - target: ToolKit
    scheme:
      testTargets:
      - InterestUIKitTests
    templateAttributes:
      featureName: InterestFeature
    templates:
    - Module
  InterestUIKitTests:
    dependencies:
    - target: InterestUIKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformUIKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: InterestFeature
    templates:
    - ModuleTests
  KYCKit:
    dependencies:
    - target: Localization
    - target: NetworkKit
    - target: PlatformKit
    - target: ToolKit
    scheme:
      testTargets:
      - KYCKitTests
    templateAttributes:
      featureName: KYCFeature
    templates:
    - Module
  KYCKitTests:
    dependencies:
    - target: KYCKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: KYCFeature
    templates:
    - ModuleTests
  KYCUIKit:
    dependencies:
    - package: Veriff
    - target: AnalyticsKit
    - target: KYCKit
    - target: Localization
    - target: NetworkKit
    - target: PlatformKit
    - target: PlatformUIKit
    - target: SharedPackagesKit
    - target: ToolKit
    - target: UIComponentsKit
    scheme:
      testTargets:
      - KYCUIKitTests
    templateAttributes:
      featureName: KYCFeature
    templates:
    - Module
  KYCUIKitTests:
    dependencies:
    - package: SnapshotTesting
    - target: KYCUIKit
    - target: SnapshotTestsHostApp # required for snapshot tests
    settings:
      TEST_HOST: "$(BUILT_PRODUCTS_DIR)/SnapshotTestsHostApp.app/SnapshotTestsHostApp" # required for snapshot tests
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Helpers/SnapshotTesting
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/KYCKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformUIKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/AnalyticsKit
    templateAttributes:
      featureName: KYCFeature
    templates:
    - ModuleTests
  Localization:
    templateAttributes:
      featureName: Localization
    scheme: {}
    templates:
    - Module
  NetworkKit:
    configFiles:
      Debug Dev: Config/NetworkKitConfig/NetworkKit-Dev.xcconfig
      Debug Production: Config/NetworkKitConfig/NetworkKit-Production.xcconfig
      Debug Staging: Config/NetworkKitConfig/NetworkKit-Staging.xcconfig
      Release: Config/NetworkKitConfig/NetworkKit-Production.xcconfig
      Release Internal: Config/NetworkKitConfig/NetworkKit-Production.xcconfig
      Release Staging: Config/NetworkKitConfig/NetworkKit-Staging.xcconfig
    dependencies:
    - framework: Carthage/Build/RxSwift.xcframework
    - framework: Carthage/Build/RxCombine.xcframework
    - framework: Carthage/Build/DIKit.xcframework
    - target: AnalyticsKit
    - target: SharedPackagesKit
    - target: ToolKit
    info:
      path: Modules/Network/NetworkKit/Info.plist
      properties:
        API_URL: $(API_URL)
        EVERYPAY_API_URL: $(EVERYPAY_API_URL)
        EXCHANGE_URL: $(EXCHANGE_URL)
        EXPLORER_SERVER: $(EXPLORER_SERVER)
        PIN_CERTIFICATE: $(PIN_CERTIFICATE)
        RETAIL_CORE_SOCKET_URL: $(RETAIL_CORE_SOCKET_URL)
        RETAIL_CORE_URL: $(RETAIL_CORE_URL)
        SWIFTY_BEAVER_APP_ID: $(SWIFTY_BEAVER_APP_ID)
        SWIFTY_BEAVER_APP_KEY: $(SWIFTY_BEAVER_APP_KEY)
        SWIFTY_BEAVER_APP_SECRET: $(SWIFTY_BEAVER_APP_SECRET)
        WALLET_SERVER: $(WALLET_SERVER)
        WEBSOCKET_SERVER: $(WEBSOCKET_SERVER)
        WEBSOCKET_SERVER_BCH: $(WEBSOCKET_SERVER_BCH)
        WEBSOCKET_SERVER_ETH: $(WEBSOCKET_SERVER_ETH)
    platform: iOS
    postCompileScripts:
    - name: Get SSL Certificate
      path: Modules/Network/NetworkKit/Scripts/get_ssl_certificate.sh
    scheme:
      testTargets:
      - NetworkKitTests
    sources:
    - createIntermediateGroups: true
      excludes:
      - Scripts
      - Cert
      path: Modules/Network/NetworkKit
    - buildPhase:
        copyFiles:
          destination: resources
      group: Modules/Network/NetworkKit/Cert
      optional: true
      path: Modules/Network/NetworkKit/Cert/blockchain.der
    schemes:
      gatherCoverageData: true
    type: framework
  NetworkKitTests:
    dependencies:
    - target: NetworkKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    templateAttributes:
      featureName: Network
    templates:
    - ModuleTests
  PlatformKit:
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - framework: Carthage/Build/CryptoSwift.xcframework
    - target: CommonCryptoKit
    - target: Localization
    - target: NetworkKit
    - target: ToolKit
    - target: WalletPayloadKit
    - target: SharedPackagesKit
    scheme:
      testTargets:
      - PlatformKitTests
    templateAttributes:
      featureName: Platform
    templates:
    - Module
  PlatformKitTests:
    dependencies:
    - target: PlatformKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/BuySellKit
    templateAttributes:
      featureName: Platform
    templates:
    - ModuleTests
  PlatformUIKit:
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - framework: Carthage/Build/Charts.xcframework
    - framework: Carthage/Build/Differentiator.xcframework
    - framework: Carthage/Build/PhoneNumberKit.xcframework
    - framework: Carthage/Build/RIBs.xcframework
    - framework: Carthage/Build/RxCocoa.xcframework
    - framework: Carthage/Build/RxDataSources.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - framework: Carthage/Build/Zxcvbn.xcframework
    - target: AnalyticsKit
    - target: Localization
    - target: PlatformKit
    - target: ToolKit
    - target: UIComponentsKit
    scheme:
      testTargets:
      - PlatformUIKitTests
    templateAttributes:
      featureName: Platform
    templates:
    - Module
  PlatformUIKitTests:
    dependencies:
    - target: PlatformUIKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformUIKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/AnalyticsKit
    templateAttributes:
      featureName: Platform
    templates:
    - ModuleTests
  PolkadotKit:
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - target: Localization
    - target: NetworkKit
    - target: PlatformKit
    - target: ToolKit
    scheme:
      testTargets:
      - PolkadotKitTests
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - Module
  PolkadotKitTests:
    dependencies:
    - target: PolkadotKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - ModuleTests
  SettingsKit:
    scheme:
      testTargets:
        - SettingsKitTests
    dependencies:
    - target: ToolKit
    - target: PlatformKit
    - target: PlatformUIKit
    - target: CommonCryptoKit
    - target: NetworkKit
    - target: WalletPayloadKit
    - target: KYCKit
    - framework: Carthage/Build/RxRelay.xcframework
    - framework: Carthage/Build/RxCocoa.xcframework
    templateAttributes:
      featureName: SettingsFeature
    templates:
    - Module
  SettingsKitTests:
    dependencies:
      - target: SettingsKit
    templates:
      - ModuleTests
    templateAttributes:
      featureName: SettingsFeature
  SettingsUIKit:
    dependencies:
      - target: KYCKit
      - target: KYCUIKit
      - target: ToolKit
      - target: PlatformKit
      - target: PlatformUIKit
      - target: Localization
      - target: SettingsKit
      - framework: Carthage/Build/RxRelay.xcframework
      - framework: Carthage/Build/RxCocoa.xcframework
    scheme:
      testTargets:
        - SettingsUIKitTests
    templates:
      - Module
    templateAttributes:
      featureName: SettingsFeature
  SettingsUIKitTests:
    dependencies:
      - target: SettingsUIKit
    templates:
      - ModuleTests
    templateAttributes:
      featureName: SettingsFeature
  SnapshotTestsHostApp: # A target only used to host (unit) snapshot tests as they require a hosting app
    platform: iOS
    sources:
    - path: SnapshotTestsHostApp
    type: application
  StellarKit:
    dependencies:
    - target: PlatformKit
    - target: Localization
    - target: ToolKit
    - target: TransactionKit
    - framework: Carthage/Build/stellarsdk.xcframework
    scheme:
      testTargets:
      - StellarKitTests
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - Module
  StellarKitTests:
    dependencies:
    - target: StellarKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/StellarKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: CryptoAssets
    templates:
    - ModuleTests
  TodayExtension:
    dependencies:
    - sdk: NotificationCenter.framework
    - target: PlatformKit
    - target: PlatformUIKit
    - target: ToolKit
    - target: NetworkKit
    - target: Localization
    - framework: Carthage/Build/RxCocoa.xcframework
    - framework: Carthage/Build/RxSwift.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - framework: Carthage/Build/RxDataSources.xcframework
    - framework: Carthage/Build/DIKit.xcframework
    - framework: Carthage/Build/Differentiator.xcframework
    platform: iOS
    scheme: {}
    settings:
      configs:
        Debug Dev:
          groups:
          - debug_signing_today_extension
        Debug Production:
          groups:
          - debug_signing_today_extension
        Debug Staging:
          groups:
          - debug_signing_today_extension
        Release:
          groups:
          - release_signing_today_extension
        Release Internal:
          groups:
          - release_signing_today_extension
        Release Staging:
          groups:
          - release_signing_today_extension
    sources:
    - TodayExtension
    type: app-extension
  ToolKit:
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - framework: Carthage/Build/DIKit.xcframework
    - framework: Carthage/Build/RxSwift.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - framework: Carthage/Build/RxCocoa.xcframework
    - framework: Carthage/Build/RxCombine.xcframework
    scheme:
      testTargets:
      - ToolKitTests
    templateAttributes:
      featureName: Tool
    templates:
    - Module
  ToolKitTests:
    dependencies:
    - target: ToolKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: Tool
    templates:
    - ModuleTests
  TransactionKit:
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - target: Localization
    - target: NetworkKit
    - target: PlatformKit
    - target: ToolKit
    - target: AnalyticsKit
    scheme:
      testTargets:
      - TransactionKitTests
    templateAttributes:
      featureName: TransactionFeature
    templates:
    - Module
  TransactionKitTests:
    dependencies:
    - target: TransactionKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: TransactionFeature
    templates:
    - ModuleTests
  TransactionUIKit:
    scheme:
      testTargets:
      - TransactionUIKitTests
    dependencies:
    - framework: Carthage/Build/BigInt.xcframework
    - framework: Carthage/Build/RxCocoa.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - target: KYCKit
    - target: KYCUIKit
    - target: Localization
    - target: PlatformKit
    - target: PlatformUIKit
    - target: ToolKit
    - target: TransactionKit
    - target: AnalyticsKit
    templateAttributes:
      featureName: TransactionFeature
    templates:
    - Module
  TransactionUIKitTests:
    dependencies:
    - target: TransactionUIKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/PlatformUIKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/AnalyticsKit
    templateAttributes:
      featureName: TransactionFeature
    templates:
    - ModuleTests
  UIComponentsKit:
    scheme:
      testTargets:
      - UIComponentsKitTests
    sources:
    - Blockchain/Resources/Fonts/Inter # required to properly render snapshot tests
    templateAttributes:
      featureName: UIComponents
    templates:
    - Module
  UIComponentsKitTests:
    dependencies:
    - target: UIComponentsKit
    templateAttributes:
      featureName: UIComponents
    templates:
    - ModuleTests
  WalletPayloadKit:
    dependencies:
    - framework: Carthage/Build/CryptoSwift.xcframework
    - target: CommonCryptoKit
    - target: Localization
    - target: ToolKit
    scheme:
      testTargets:
      - WalletPayloadKitTests
    templateAttributes:
      featureName: WalletPayload
    templates:
    - Module
  WalletPayloadKitTests:
    dependencies:
    - target: WalletPayloadKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    templateAttributes:
      featureName: WalletPayload
    templates:
    - ModuleTests
  RemoteNotificationsKit:
    dependencies:
    - framework: Carthage/Build/RxCocoa.xcframework
    - framework: Carthage/Build/RxRelay.xcframework
    - target: PlatformKit
    - target: PlatformUIKit
    - target: ToolKit
    - target: AnalyticsKit
    - target: NetworkKit
    scheme:
      testTargets:
      - RemoteNotificationsKitTests
    templateAttributes:
      featureName: RemoteNotifications
    templates:
    - Module
  RemoteNotificationsKitTests:
    dependencies:
    - target: RemoteNotificationsKit
    sources:
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/ToolKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/NetworkKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/RemoteNotificationsKit
    - createIntermediateGroups: true
      path: TestKit/TestKit/Mocks/AnalyticsKit
    templateAttributes:
      featureName: RemoteNotifications
    templates:
    - ModuleTests
  AuthenticationKit:
    scheme:
      testTargets:
      - AuthenticationKitTests
    templateAttributes:
      featureName: AuthenticationFeature
    templates:
    - Module
  AuthenticationKitTests:
    dependencies:
    - target: AuthenticationKit
    templateAttributes:
      featureName: AuthenticationFeature
    templates:
      - ModuleTests
  AuthenticationUIKit:
    dependencies:
    - target: AuthenticationKit
    - target: SharedPackagesKit
    - target: UIComponentsKit
    scheme:
      testTargets:
      - AuthenticationUIKitTests
    templateAttributes:
      featureName: AuthenticationFeature
    templates:
      - Module
  AuthenticationUIKitTests:
    dependencies: 
    - target: AuthenticationUIKit
    templateAttributes:
      featureName: AuthenticationFeature
    templates:
      - ModuleTests
  AuthenticationDataKit:
    dependencies:
    - target: AuthenticationKit
    scheme:
      testTargets:
      - AuthenticationDataKitTests
    templateAttributes:
      featureName: AuthenticationFeature
    templates:
      - Module
  AuthenticationDataKitTests:
    dependencies:
    - target: AuthenticationDataKit
    templateAttributes:
      featureName: AuthenticationFeature
    templates:
      - ModuleTests
